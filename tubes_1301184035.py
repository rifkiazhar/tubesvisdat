# -*- coding: utf-8 -*-
"""Tubes_1301184035.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MqU0S2y7VUMeqfFlIvHfKiUMHiIHqcaR
"""

#Data handing
import pandas as pd
import numpy as np

#Bokeh libraries
#from bokeh.io import curdoc
from bokeh.io import output_file, output_notebook
from bokeh.plotting import figure, show
from bokeh.models import HoverTool, ColumnDataSource
from bokeh.models import CategoricalColorMapper
from bokeh.palettes import Spectral6
from bokeh.layouts import widgetbox, row, gridplot
from bokeh.models import Slider, Select
from bokeh.models.widgets import Tabs, Panel

output_notebook()

fig = figure()

show(fig)

dataset = pd.read_csv('covid_19_indonesia_time_series_all.csv') #https://www.kaggle.com/hendratno/covid19-indonesia

dataset["Date"] = pd.to_datetime(dataset['Date'])
dataset



dataset.shape

dataset = dataset [['Date', 'Location', 'New Cases', 'Total Cases', 'Total Deaths', 'Total Recovered']]
dataset

#membuat location agar tidak sama
region = dataset.Location.unique().tolist()

#List dari setiap kolom
col_list = list(dataset.columns)

def dataset(region,cases):
  x_list = []
  y_list = []
  colors = []
  label = []

  for i, region in enumerate(region):
    df = dataset[dataset['Location'] == region].reset_index(drop= True)

    x = list(df['Date'])
    y = list(df[Cases])

    x_list.append(list(x))
    y_list.append(list(y))

    colors.append(Spectral6[i])
    labels.append(region)

    new_src = ColumnDataSource(data = {'x':x_list, 'y':y_list, 'color':colors, 'label':labels})

    return new_src

def plot(src, Cases):

  fig = figure(x_axis_type='datetime',
               plot_width=900, plot_height=450,
               title = 'Visualization Covid19 in Indonesian',
               x_axis_label= 'Date', y_axis_label= 'Cases')
  
  tooltips_region = [
                     ('Date', '@date{%F}'),
                     ('New Cases', '@new cases'),
                     ('Total Cases', '@total cases'),
                     ('Total Deaths', '@total_deaths'),
                     ('Total Recovered', '@total_recovered')
                    ]

  fig.add_tools(HoverTool(tooltips=tooltips_region, formatters= {'@date' : 'datetime'}))

  return fig

